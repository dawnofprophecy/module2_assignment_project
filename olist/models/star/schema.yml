version: 2

models:
  - name: dim_date
    columns:
      - name: date_key
        tests: [not_null, unique]

  - name: dim_customer
    tests:
      - not_null:
          column_name: customer_key
      - unique:
          column_name: customer_key
    columns:
      - name: customer_id
        tests: [not_null]

  - name: dim_seller
    tests:
      - not_null:
          column_name: seller_key
      - unique:
          column_name: seller_key

  - name: dim_product
    tests:
      - not_null:
          column_name: product_key
      - unique:
          column_name: product_key
    columns:
      - name: product_id
        tests: [not_null]

  - name: fact_order_items
    tests:
      # compound grain: each (order_id, order_item_id) should be unique
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns: ['order_id','order_item_id']
    columns:
      - name: customer_key
        tests:
          - relationships:
              to: ref('dim_customer')
              field: customer_key
      - name: seller_key
        tests:
          - relationships:
              to: ref('dim_seller')
              field: seller_key
      - name: product_key
        tests:
          - relationships:
              to: ref('dim_product')
              field: product_key
      - name: order_date_key
        tests:
          - relationships:
              to: ref('dim_date')
              field: date_key
      - name: price
        tests:
          - dbt_utils.expression_is_true:
              expression: "price >= 0"
      - name: freight_value
        tests:
          - dbt_utils.expression_is_true:
              expression: "freight_value >= 0"
